{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anjali Kalarikkal\\\\Documents\\\\4th Sem EL\\\\onco\\\\Onco\\\\src\\\\components\\\\ResetPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Loginpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [role, setRole] = useState('patient');\n  const [message, setMessage] = useState('');\n  const handleReset = async () => {\n    if (!email || !newPassword) {\n      setMessage('Please fill all fields');\n      return;\n    }\n    const payload = {\n      email,\n      new_password: newPassword,\n      role\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.success) {\n        setMessage('Password reset successful!');\n      } else {\n        setMessage(result.message || 'Failed to reset password');\n      }\n    } catch (err) {\n      setMessage('Server error. Try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"role\",\n            value: \"doctor\",\n            checked: role === 'doctor',\n            onChange: () => setRole('doctor')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \"Doctor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"role\",\n            value: \"patient\",\n            checked: role === 'patient',\n            onChange: () => setRole('patient')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \"Patient\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: handleReset,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordPage, \"3q8w2wrQn057YHj9veCZRVYUUnw=\");\n_c = ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPasswordPage","_s","email","setEmail","newPassword","setNewPassword","role","setRole","message","setMessage","handleReset","payload","new_password","response","fetch","method","headers","body","JSON","stringify","result","json","success","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","checked","onChange","placeholder","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Anjali Kalarikkal/Documents/4th Sem EL/onco/Onco/src/components/ResetPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Loginpage.css';\r\n\r\nexport default function ResetPasswordPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [role, setRole] = useState('patient');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleReset = async () => {\r\n    if (!email || !newPassword) {\r\n      setMessage('Please fill all fields');\r\n      return;\r\n    }\r\n\r\n    const payload = { email, new_password: newPassword, role };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/reset-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        setMessage('Password reset successful!');\r\n      } else {\r\n        setMessage(result.message || 'Failed to reset password');\r\n      }\r\n    } catch (err) {\r\n      setMessage('Server error. Try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h1>Reset Password</h1>\r\n\r\n        <div className=\"role-selector\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"role\"\r\n              value=\"doctor\"\r\n              checked={role === 'doctor'}\r\n              onChange={() => setRole('doctor')}\r\n            />\r\n            Doctor\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"role\"\r\n              value=\"patient\"\r\n              checked={role === 'patient'}\r\n              onChange={() => setRole('patient')}\r\n            />\r\n            Patient\r\n          </label>\r\n        </div>\r\n\r\n        <label>Email</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <label>New Password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter new password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n\r\n        <button className=\"login-button\" onClick={handleReset}>\r\n          Reset Password\r\n        </button>\r\n\r\n        {message && <div className=\"error-msg\">{message}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}