{"ast":null,"code":"var _jsxFileName = \"D:\\\\Onco\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RoleSelector from './RoleSelector';\nimport { useNavigate } from 'react-router-dom';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: '',\n    designation: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    role: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setError('');\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSignUp = async () => {\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    const payload = {\n      name: formData.name,\n      age: formData.age,\n      role: formData.role,\n      email: formData.email,\n      password: formData.password,\n      confirm_password: formData.confirmPassword\n    };\n    if (formData.role === 'doctor') {\n      payload.designation = formData.designation;\n    } else if (formData.role === 'patient') {\n      payload.sex = formData.sex;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('Signed up successfully!');\n        navigate('/');\n      } else {\n        setError(result.message || 'Sign-up failed. Please try again.');\n      }\n    } catch (err) {\n      setError('Error connecting to server');\n    }\n  };\n\n  // ✅ Background style using image from public folder\n  const backgroundStyle = {\n    backgroundImage: \"url('/meal-planner/bg5.jpg')\",\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    height: '80vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Choose your role to begin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoleSelector, {\n        role: formData.role,\n        setRole: role => setFormData({\n          ...formData,\n          role\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"Full Name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"age\",\n        placeholder: \"Age\",\n        type: \"number\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), formData.role === 'doctor' && /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"designation\",\n        placeholder: \"Designation\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), formData.role === 'patient' && /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"sex\",\n        placeholder: \"Sex (e.g., Male/Female)\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        placeholder: \"Email\",\n        type: \"email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        placeholder: \"Password\",\n        type: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        type: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUp,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUpPage, \"dkn5kdHgozmEwlheqDFBlJ3+lm4=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","RoleSelector","useNavigate","jsxDEV","_jsxDEV","SignUpPage","_s","navigate","formData","setFormData","name","age","sex","designation","email","password","confirmPassword","role","error","setError","handleChange","e","target","value","handleSignUp","payload","confirm_password","response","fetch","method","headers","body","JSON","stringify","result","json","success","alert","message","err","backgroundStyle","backgroundImage","backgroundSize","backgroundPosition","height","display","justifyContent","alignItems","style","children","className","fileName","_jsxFileName","lineNumber","columnNumber","setRole","placeholder","onChange","type","onClick","_c","$RefreshReg$"],"sources":["D:/Onco/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RoleSelector from './RoleSelector';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './SignUp.css';\r\n\r\nexport default function SignUpPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    age: '',\r\n    sex: '',\r\n    designation: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    role: '',\r\n  });\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setError('');\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      name: formData.name,\r\n      age: formData.age,\r\n      role: formData.role,\r\n      email: formData.email,\r\n      password: formData.password,\r\n      confirm_password: formData.confirmPassword,\r\n    };\r\n\r\n    if (formData.role === 'doctor') {\r\n      payload.designation = formData.designation;\r\n    } else if (formData.role === 'patient') {\r\n      payload.sex = formData.sex;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/signup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        alert('Signed up successfully!');\r\n        navigate('/');\r\n      } else {\r\n        setError(result.message || 'Sign-up failed. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setError('Error connecting to server');\r\n    }\r\n  };\r\n\r\n  // ✅ Background style using image from public folder\r\n  const backgroundStyle = {\r\n    backgroundImage: \"url('/meal-planner/bg5.jpg')\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    height: '80vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <div className=\"signup-card\">\r\n        <h2>Sign Up</h2>\r\n        <p className=\"subtitle\">Choose your role to begin:</p>\r\n\r\n        <RoleSelector role={formData.role} setRole={(role) => setFormData({ ...formData, role })} />\r\n\r\n        <input name=\"name\" placeholder=\"Full Name\" onChange={handleChange} />\r\n        <input name=\"age\" placeholder=\"Age\" type=\"number\" onChange={handleChange} />\r\n\r\n        {formData.role === 'doctor' && (\r\n          <input name=\"designation\" placeholder=\"Designation\" onChange={handleChange} />\r\n        )}\r\n\r\n        {formData.role === 'patient' && (\r\n          <input name=\"sex\" placeholder=\"Sex (e.g., Male/Female)\" onChange={handleChange} />\r\n        )}\r\n\r\n        <input name=\"email\" placeholder=\"Email\" type=\"email\" onChange={handleChange} />\r\n        <input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\r\n        <input name=\"confirmPassword\" placeholder=\"Confirm Password\" type=\"password\" onChange={handleChange} />\r\n\r\n        {error && <div className=\"error-msg\">{error}</div>}\r\n\r\n        <button onClick={handleSignUp}>Create Account</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}